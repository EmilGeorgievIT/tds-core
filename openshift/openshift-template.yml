# Configures the build pipeline dependencies for openshift
# See: README.md

apiVersion: v1
kind: List
metadata:
  name: tds-pipeline
items:

# Configure our Docker image repository
# https://docs.openshift.com/enterprise/3.2/dev_guide/managing_images.html
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: tds
    labels:
      app: tds

# Configure our build pipeline template
# https://docs.openshift.com/enterprise/3.2/dev_guide/templates.html
- apiVersion: v1
  kind: Template
  metadata:
    name: tds-pipeline
  parameters:
  - name: BRANCH
    description: Branch to build from
    value: master
  objects:

  # Configures the OpenShift/Jenkins build pipeline
  # https://docs.openshift.com/enterprise/3.2/dev_guide/builds.html#defining-a-buildconfig
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: tds-pipeline
      labels:
        app: tds
    spec:
      source:
        type: Git
        git:
          uri: git@github.com:telusdigital/tds.git
          ref: ${BRANCH}
        sourceSecret:
          name: github-secret
      triggers:
        - type: GitHub
          github:
            secret: tisk
      runPolicy: SerialLatestOnly
      strategy:
        type: JenkinsPipeline
        jenkinsPipelineStrategy:
          jenkinsfilePath: Jenkinsfile

  # Configure our Docker container build
  # https://docs.openshift.com/enterprise/3.2/architecture/core_concepts/builds_and_image_streams.html#docker-build
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: tds
      labels:
        app: tds
    spec:
      source:
        type: Git
        git:
          uri: git@github.com:telusdigital/tds.git
          ref: ${BRANCH}
        sourceSecret:
          name: github-secret
        secrets:
          - secret:
              name: npmrc-secret
        runPolicy: Parallel
      strategy:
        type: Docker
        dockerStrategy:
          dockerfilePath: Dockerfile
          forcePull: true
      output:
        to:
          kind: ImageStreamTag
          name: tds:latest
      postCommit:
        args: ["test"]

# Configure our deployment template
# https://docs.openshift.com/enterprise/3.2/dev_guide/templates.html
- apiVersion: v1
  kind: Template
  metadata:
    name: tds
  parameters:
  - name: VERSION
    value: ''
  - name: ENVIRONMENT
    description: The environment name
    value: production
  - name: DOCKER_REGISTRY
    description: Docker image to deploy
  - name: NUM_REPLICAS
    description: How many replicas of the pod to deploy?
    value: '1'
  objects:

  # How the container is deployed
  # https://docs.openshift.com/enterprise/3.2/dev_guide/deployments.html
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: tds-${ENVIRONMENT}
      labels:
        version: ${VERSION}
    spec:
      replicas: ${NUM_REPLICAS}
      template:
        metadata:
          labels:
            deploymentconfig: tds-${ENVIRONMENT}
            version: ${VERSION}
        spec:
          containers:
            - name: tds
              image: ${DOCKER_REGISTRY}
              imagePullPolicy: Always
              env:
                - name: APP_ENV
                  value: ${ENVIRONMENT}
              ports:
                - containerPort: 6060
              livenessProbe:
                tcpSocket:
                  port: 6060
                initialDelaySeconds: 1
                timeoutSeconds: 1
              readinessProbe:
                httpGet:
                  path: /
                  port: 6060
                initialDelaySeconds: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 1000m
                  memory: 256Mi

  # How the container is load balanced
  # https://docs.openshift.com/enterprise/3.2/architecture/core_concepts/pods_and_services.html
  - apiVersion: v1
    kind: Service
    metadata:
      name: tds-${ENVIRONMENT}
    spec:
      ports:
        - name: tds
          port: 6060
          targetPort: 6060
      selector:
        deploymentconfig: tds-${ENVIRONMENT}

  # How the container is exposed
  # https://docs.openshift.com/enterprise/3.2/dev_guide/routes.html
  - apiVersion: v1
    kind: Route
    metadata:
      name: tds-${ENVIRONMENT}
    spec:
      to:
        kind: Service
        name: tds-${ENVIRONMENT}
        weight: 100
      port:
        targetPort: 6060
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
